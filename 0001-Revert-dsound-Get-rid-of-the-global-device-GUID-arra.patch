From bf2a7bc93b727f0138aceaab99ebb2fa558a3fd6 Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Thu, 16 Nov 2023 17:23:07 -0600
Subject: [PATCH 1/2] Revert "dsound: Get rid of the global device GUID
 arrays."

This reverts commit 39b8fe1a353b715c1d580fe0334257846a744005.

CW-Bug-Id: #23002
---
 dlls/dsound/dsound_main.c    | 31 ++++++++++++++++++++-----------
 dlls/dsound/dsound_private.h |  5 ++++-
 dlls/dsound/propset.c        | 12 ++++++++----
 3 files changed, 32 insertions(+), 16 deletions(-)

diff --git a/dlls/dsound/dsound_main.c b/dlls/dsound/dsound_main.c
index d18733294d0..3347f0243ab 100644
--- a/dlls/dsound/dsound_main.c
+++ b/dlls/dsound/dsound_main.c
@@ -76,6 +76,9 @@ static CRITICAL_SECTION_DEBUG DSOUND_renderers_lock_debug =
 };
 CRITICAL_SECTION DSOUND_renderers_lock = { &DSOUND_renderers_lock_debug, -1, 0, 0, 0, 0 };
 
+GUID                    DSOUND_renderer_guids[MAXWAVEDRIVERS];
+GUID                    DSOUND_capture_guids[MAXWAVEDRIVERS];
+
 const WCHAR wine_vxd_drv[] = L"winemm.vxd";
 
 /* All default settings, you most likely don't want to touch these, see wiki on UsefulRegistryKeys */
@@ -388,13 +391,13 @@ HRESULT get_mmdevice(EDataFlow flow, const GUID *tgt, IMMDevice **device)
     return DSERR_INVALIDPARAM;
 }
 
-static BOOL send_device(IMMDevice *device, LPDSENUMCALLBACKW cb, void *user)
+static BOOL send_device(IMMDevice *device, GUID *guid,
+        LPDSENUMCALLBACKW cb, void *user)
 {
     IPropertyStore *ps;
     PROPVARIANT pv;
     BOOL keep_going;
     HRESULT hr;
-    GUID guid;
 
     PropVariantInit(&pv);
 
@@ -404,7 +407,7 @@ static BOOL send_device(IMMDevice *device, LPDSENUMCALLBACKW cb, void *user)
         return TRUE;
     }
 
-    hr = get_mmdevice_guid(device, ps, &guid);
+    hr = get_mmdevice_guid(device, ps, guid);
     if(FAILED(hr)){
         IPropertyStore_Release(ps);
         return TRUE;
@@ -418,10 +421,10 @@ static BOOL send_device(IMMDevice *device, LPDSENUMCALLBACKW cb, void *user)
         return TRUE;
     }
 
-    TRACE("Calling back with %s (%s)\n", wine_dbgstr_guid(&guid),
+    TRACE("Calling back with %s (%s)\n", wine_dbgstr_guid(guid),
             wine_dbgstr_w(pv.pwszVal));
 
-    keep_going = cb(&guid, pv.pwszVal, wine_vxd_drv, user);
+    keep_going = cb(guid, pv.pwszVal, wine_vxd_drv, user);
 
     PropVariantClear(&pv);
     IPropertyStore_Release(ps);
@@ -431,12 +434,13 @@ static BOOL send_device(IMMDevice *device, LPDSENUMCALLBACKW cb, void *user)
 
 /* S_FALSE means the callback returned FALSE at some point
  * S_OK means the callback always returned TRUE */
-HRESULT enumerate_mmdevices(EDataFlow flow, LPDSENUMCALLBACKW cb, void *user)
+HRESULT enumerate_mmdevices(EDataFlow flow, GUID *guids,
+        LPDSENUMCALLBACKW cb, void *user)
 {
     IMMDeviceEnumerator *devenum;
     IMMDeviceCollection *coll;
     IMMDevice *defdev = NULL;
-    UINT count, i;
+    UINT count, i, n;
     BOOL keep_going;
     HRESULT hr, init_hr;
 
@@ -475,8 +479,10 @@ HRESULT enumerate_mmdevices(EDataFlow flow, LPDSENUMCALLBACKW cb, void *user)
                 eMultimedia, &defdev);
         if(FAILED(hr)){
             defdev = NULL;
+            n = 0;
         }else{
-            keep_going = send_device(defdev, cb, user);
+            keep_going = send_device(defdev, &guids[0], cb, user);
+            n = 1;
         }
     }
 
@@ -490,7 +496,8 @@ HRESULT enumerate_mmdevices(EDataFlow flow, LPDSENUMCALLBACKW cb, void *user)
         }
 
         if(device != defdev){
-            keep_going = send_device(device, cb, user);
+            keep_going = send_device(device, &guids[n], cb, user);
+            ++n;
         }
 
         IMMDevice_Release(device);
@@ -533,7 +540,8 @@ HRESULT WINAPI DirectSoundEnumerateW(
 
     setup_dsound_options();
 
-    hr = enumerate_mmdevices(eRender, lpDSEnumCallback, lpContext);
+    hr = enumerate_mmdevices(eRender, DSOUND_renderer_guids,
+            lpDSEnumCallback, lpContext);
     return SUCCEEDED(hr) ? DS_OK : hr;
 }
 
@@ -596,7 +604,8 @@ DirectSoundCaptureEnumerateW(
 
     setup_dsound_options();
 
-    hr = enumerate_mmdevices(eCapture, lpDSEnumCallback, lpContext);
+    hr = enumerate_mmdevices(eCapture, DSOUND_capture_guids,
+            lpDSEnumCallback, lpContext);
     return SUCCEEDED(hr) ? DS_OK : hr;
 }
 
diff --git a/dlls/dsound/dsound_private.h b/dlls/dsound/dsound_private.h
index 081a56b2ee7..09fa219ecca 100644
--- a/dlls/dsound/dsound_private.h
+++ b/dlls/dsound/dsound_private.h
@@ -254,6 +254,8 @@ HRESULT IDirectSoundCaptureImpl_Create(IUnknown *outer_unk, REFIID riid, void **
 extern CRITICAL_SECTION DSOUND_renderers_lock DECLSPEC_HIDDEN;
 extern struct list DSOUND_renderers DECLSPEC_HIDDEN;
 
+extern GUID DSOUND_renderer_guids[MAXWAVEDRIVERS] DECLSPEC_HIDDEN;
+extern GUID DSOUND_capture_guids[MAXWAVEDRIVERS] DECLSPEC_HIDDEN;
 
 extern const WCHAR wine_vxd_drv[] DECLSPEC_HIDDEN;
 
@@ -263,7 +265,8 @@ HRESULT get_mmdevice(EDataFlow flow, const GUID *tgt, IMMDevice **device) DECLSP
 
 BOOL DSOUND_check_supported(IAudioClient *client, DWORD rate,
         DWORD depth, WORD channels) DECLSPEC_HIDDEN;
-HRESULT enumerate_mmdevices(EDataFlow flow, LPDSENUMCALLBACKW cb, void *user) DECLSPEC_HIDDEN;
+HRESULT enumerate_mmdevices(EDataFlow flow, GUID *guids,
+        LPDSENUMCALLBACKW cb, void *user) DECLSPEC_HIDDEN;
 
 static inline WCHAR *strdupW( const WCHAR *str )
 {
diff --git a/dlls/dsound/propset.c b/dlls/dsound/propset.c
index e72757bdb4b..f42cfbf4163 100644
--- a/dlls/dsound/propset.c
+++ b/dlls/dsound/propset.c
@@ -136,9 +136,11 @@ static HRESULT DSPROPERTY_WaveDeviceMappingW(
     search.found_guid = &ppd->DeviceId;
 
     if (ppd->DataFlow == DIRECTSOUNDDEVICE_DATAFLOW_RENDER)
-        hr = enumerate_mmdevices(eRender, search_callback, &search);
+        hr = enumerate_mmdevices(eRender, DSOUND_renderer_guids,
+                search_callback, &search);
     else if (ppd->DataFlow == DIRECTSOUNDDEVICE_DATAFLOW_CAPTURE)
-        hr = enumerate_mmdevices(eCapture, search_callback, &search);
+        hr = enumerate_mmdevices(eCapture, DSOUND_capture_guids,
+                search_callback, &search);
     else
         return DSERR_INVALIDPARAM;
 
@@ -316,10 +318,12 @@ static HRESULT DSPROPERTY_EnumerateW(
         return E_PROP_ID_UNSUPPORTED;
     }
 
-    hr = enumerate_mmdevices(eRender, enum_callback, ppd);
+    hr = enumerate_mmdevices(eRender, DSOUND_renderer_guids,
+            enum_callback, ppd);
 
     if(hr == S_OK)
-        hr = enumerate_mmdevices(eCapture, enum_callback, ppd);
+        hr = enumerate_mmdevices(eCapture, DSOUND_capture_guids,
+                enum_callback, ppd);
 
     return SUCCEEDED(hr) ? DS_OK : hr;
 }
-- 
2.42.1

