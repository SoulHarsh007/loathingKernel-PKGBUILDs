diff --git a/FTL.h b/FTL.h
index d751f93..f142176 100644
--- a/FTL.h
+++ b/FTL.h
@@ -76,7 +76,7 @@ typedef struct {
 	const char* log;
 	const char* pid;
 	const char* port;
-	const char* db;
+	char* db;
 } FTLFileNamesStruct;
 
 typedef struct {
diff --git a/config.c b/config.c
index c854ec0..db3f5a2 100644
--- a/config.c
+++ b/config.c
@@ -130,8 +130,31 @@ void read_FTLconf(void)
 	else
 		logg("   RESOLVE_IPV4: Don\'t resolve IPv4 addresses");
 
+	// DBFILE
+	// defaults to: "/etc/pihole/pihole-FTL.db"
+	buffer = parse_FTLconf(fp, "DBFILE");
+
+	if(buffer != NULL && sscanf(buffer, "%127ms", &FTLfiles.db))
+	{
+		// Using custom path
+	}
+	else
+	{
+		FTLfiles.db = strdup("/etc/pihole/pihole-FTL.db");
+	}
+
+	// Test if memory allocation was successful
+	if(FTLfiles.db == NULL)
+	{
+		logg("FATAL: Allocating memory for FTLfiles.db failed (%i). Exiting.", errno);
+		exit(EXIT_FAILURE);
+	}
+
+	logg("   DBFILE: Using %s", FTLfiles.db);
+
 	logg("Finished config file parsing");
 
+	// Release memory
 	if(conflinebuffer != NULL)
 	{
 		free(conflinebuffer);
diff --git a/structs.c b/structs.c
index fe22f8b..2e7abcd 100644
--- a/structs.c
+++ b/structs.c
@@ -15,7 +15,7 @@ FTLFileNamesStruct FTLfiles = {
 	"/var/log/pihole-FTL.log",
 	"/var/run/pihole-FTL.pid",
 	"/var/run/pihole-FTL.port",
-	"/etc/pihole/pihole-FTL.db"
+	NULL
 };
 
 logFileNamesStruct files = {

diff --git a/args.c b/args.c
index bee1ce0..563c71a 100644
--- a/args.c
+++ b/args.c
@@ -113,7 +113,7 @@ void parse_args(int argc, char* argv[])
 		{
 			travis = true;
 			FTLfiles.log = "pihole-FTL.log";
-			FTLfiles.db = "pihole-FTL.db";
+			// FTLfiles.db will be set to "pihole-FTL.db" via config file on Travis
 			files.log = "pihole.log";
 			ok = true;
 		}
diff --git a/config.c b/config.c
index db3f5a2..fc4a7a8 100644
--- a/config.c
+++ b/config.c
@@ -134,23 +134,23 @@ void read_FTLconf(void)
 	// defaults to: "/etc/pihole/pihole-FTL.db"
 	buffer = parse_FTLconf(fp, "DBFILE");
 
-	if(buffer != NULL && sscanf(buffer, "%127ms", &FTLfiles.db))
-	{
-		// Using custom path
-	}
-	else
+	errno = 0;
+	if(!(buffer != NULL && sscanf(buffer, "%127ms", &FTLfiles.db)))
 	{
+		// Use standard path if no custom path was obtained from the config file
 		FTLfiles.db = strdup("/etc/pihole/pihole-FTL.db");
 	}
 
 	// Test if memory allocation was successful
-	if(FTLfiles.db == NULL)
+	if(FTLfiles.db == NULL && errno != 0)
 	{
-		logg("FATAL: Allocating memory for FTLfiles.db failed (%i). Exiting.", errno);
+		logg("FATAL: Allocating memory for FTLfiles.db failed (%s, %i). Exiting.", strerror(errno), errno);
 		exit(EXIT_FAILURE);
 	}
-
-	logg("   DBFILE: Using %s", FTLfiles.db);
+	else if(FTLfiles.db != NULL && strlen(FTLfiles.db) > 0)
+		logg("   DBFILE: Using %s", FTLfiles.db);
+	else
+		logg("   DBFILE: Not using database due to empty filename");
 
 	logg("Finished config file parsing");
 
diff --git a/database.c b/database.c
index 110d60b..0c8f3ca 100644
--- a/database.c
+++ b/database.c
@@ -128,6 +128,14 @@ bool db_create(void)
 
 void db_init(void)
 {
+	// First check if the user doesn't want to use the database and set an
+	// empty string as file name in FTL's config file
+	if(FTLfiles.db == NULL || strlen(FTLfiles.db) == 0)
+	{
+		database = false;
+		return;
+	}
+
 	int rc = sqlite3_open_v2(FTLfiles.db, &db, SQLITE_OPEN_READWRITE, NULL);
 	if( rc ){
 		logg("db_init() - Cannot open database (%i): %s", rc, sqlite3_errmsg(db));
diff --git a/args.c b/args.c
index 563c71a..16cfedd 100644
--- a/args.c
+++ b/args.c
@@ -114,6 +114,7 @@ void parse_args(int argc, char* argv[])
 			travis = true;
 			FTLfiles.log = "pihole-FTL.log";
 			// FTLfiles.db will be set to "pihole-FTL.db" via config file on Travis
+			FTLfiles.conf = "pihole-FTL.conf";
 			files.log = "pihole.log";
 			ok = true;
 		}
diff --git a/config.c b/config.c
index fc4a7a8..d17e6ca 100644
--- a/config.c
+++ b/config.c
@@ -28,7 +28,7 @@ void read_FTLconf(void)
 	}
 
 	// Parse lines in the config file
-	logg("Starting config file parsing");
+	logg("Starting config file parsing (%s)", FTLfiles.conf);
 
 	// SOCKET_LISTENING
 	// defaults to: listen only local

diff --git a/config.c b/config.c
index d17e6ca..29b2e00 100644
--- a/config.c
+++ b/config.c
@@ -135,6 +135,7 @@ void read_FTLconf(void)
 	buffer = parse_FTLconf(fp, "DBFILE");
 
 	errno = 0;
+	// Use sscanf() to obtain filename from config file parameter only if buffer != NULL
 	if(!(buffer != NULL && sscanf(buffer, "%127ms", &FTLfiles.db)))
 	{
 		// Use standard path if no custom path was obtained from the config file
