# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Maintainer: Peter Jung <ptr1337@archlinux.org>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-staging
pkgver=9.22
pkgrel=2
_tkg_commit=52b87f0b58ef4e617282c4e362c3f948934e699b

_pkgbasever=${pkgver/rc/-rc}
_winever=$_pkgbasever
#_winever=${_pkgbasever%.*}

source=("git+https://gitlab.winehq.org/wine/wine.git?signed#tag=wine-$pkgver"
        "wine-staging-$_pkgbasever::git+https://gitlab.winehq.org/wine/wine-staging.git#tag=v$_pkgbasever"
        30-win32-aliases.conf
        wine-binfmt.conf)
source+=(
        git+https://github.com/Frogging-Family/wine-tkg-git.git#commit=${_tkg_commit}
        wine-wmclass.patch
        wine-isolate_home.patch
        wine-ntsync.patch
)
sha512sums=('5fbc77ea573b4d0ae11ad30302e799d9a03620dfc87d005a8abee381010d1dae6c1b11cb06385b1ef6ae6f887f1e747c20e01bf0bb4853f0ca945486d9513857'
            'c936aae676652de4c877cc696560777c1fe0f7f905919b45005e227aff1da1ea25e2088859dbe0ac01c9d436adf00bf6700d642203b5ae99ba5e4ff715eec92e'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285'
            'f80ae8c9244e2864913ae61088e4b812c0c6d1275887b8e07962ea0f03e817da2d30f3a1842127d7475477a0b9ee9e6a2a4497da4e2986b4b98c543aa6ad6daf'
            '30437d8ee92c5741fa50a7fe346ccfc48ba809dad0d740903a05a67781d23ea38a5094038a070a253e3fdd8046783b46a5420df6361bdd30cb229d3d88107569'
            '3dcdbd523fcbe79b9e9e9b026b9d0a5edf296514c7b48bd465d2dc05a8ca08e23ba8817e2de08edfe52286a2a2f81db42b65f71254cabe496752b9d45131d282'
            'f9ef6fa9b8a203c4726576ecd7c5c0ff0a5c1fca8b4ec970f9752ba9c1bdff046bea7d0717ce9f3f71931a17bf8f711b22e21d33b895d5f5e376c3ad43f8f62c')
validpgpkeys=(5AC1A08B03BD7A313E0A955AF5E6E9EEB9461DD7
              DA23579A74D4AD9AF9D3F945CEFAC8EAAF17519D)

pkgdesc="A compatibility layer for running Windows programs - Staging branch"
url="https://www.wine-staging.com"
arch=(x86_64)
options=(!staticlibs !lto)
license=(LGPL-2.1-or-later)

depends=(
  attr             #lib32-attr
  fontconfig       #lib32-fontconfig
  libxcursor       #lib32-libxcursor
  libxrandr        #lib32-libxrandr
  libxi            #lib32-libxi
  gettext          #lib32-gettext
  freetype2        #lib32-freetype2
  gcc-libs         #lib32-gcc-libs
  libpcap          #lib32-libpcap
  desktop-file-utils
)
depends+=(
  libxkbcommon     #lib32-libxkbcommon
  wayland          #lib32-wayland
)

makedepends=(autoconf bison perl flex mingw-w64-gcc
  git
  python
  ffmpeg
  giflib                #lib32-giflib
  gnutls                #lib32-gnutls
  libxinerama           #lib32-libxinerama
  libxcomposite         #lib32-libxcomposite
  libxxf86vm            #lib32-libxxf86vm
  v4l-utils             #lib32-v4l-utils
  alsa-lib              #lib32-alsa-lib
  libxcomposite         #lib32-libxcomposite
  mesa                  #lib32-mesa
  mesa-libgl            #lib32-mesa-libgl
  opencl-icd-loader     #lib32-opencl-icd-loader
  libpulse              #lib32-libpulse
  libva                 #lib32-libva
  gtk3                  #lib32-gtk3
  gst-plugins-base-libs #lib32-gst-plugins-base-libs
  vulkan-icd-loader     #lib32-vulkan-icd-loader
  sdl2                  #lib32-sdl2
  libcups               #lib32-libcups
  sane
  libgphoto2
  ffmpeg
  samba
  opencl-headers
)
makedepends+=(
  ntsync-header
)

optdepends=(
  ffmpeg
  giflib                #lib32-giflib
  gnutls                #lib32-gnutls
  v4l-utils             #lib32-v4l-utils
  libpulse              #lib32-libpulse
  alsa-plugins          #lib32-alsa-plugins
  alsa-lib              #lib32-alsa-lib
  libxcomposite         #lib32-libxcomposite
  libxinerama           #lib32-libxinerama
  opencl-icd-loader     #lib32-opencl-icd-loader
  libva                 #lib32-libva
  gtk3                  #lib32-gtk3
  gst-plugins-base-libs #lib32-gst-plugins-base-libs
  gst-plugins-good      #lib32-gst-plugins-good
  vulkan-icd-loader     #lib32-vulkan-icd-loader
  sdl2                  #lib32-sdl2
  sane
  libgphoto2
  ffmpeg
  cups
  samba           dosbox
)
optdepends+=(
  ntsync-dkms
)

provides=("wine=$pkgver")
conflicts=('wine')
install=wine.install

prepare() {
  # Allow ccache to work
  mv wine $pkgname

  # Get rid of old build dirs
  rm -rf $pkgname-{32,64}-build
  mkdir $pkgname-{32,64}-build

  # apply wine-staging patchset
  cd $pkgname
  ../wine-staging-$_pkgbasever/staging/patchinstall.py --backend=git-apply --all \
    -W eventfd_synchronization \
    -W ntdll-Syscall_Emulation \
    -W server-PeekMessage \
    -W server-Signal_Thread

  patch -p1 -i "$srcdir"/wine-ntsync.patch

  _tkg_path="$srcdir"/wine-tkg-git/wine-tkg-git/wine-tkg-patches
  #patch -p1 -i "$_tkg_path"/proton/fsync/fsync-unix-staging.patch
  #patch -p1 -i "$_tkg_path"/proton/fsync/fsync_futex_waitv.patch
  patch -p1 -i "$_tkg_path"/proton/LAA/LAA-unix-staging.patch
  patch -p1 -i "$_tkg_path"/proton/msvcrt_nativebuiltin/msvcrt_nativebuiltin_mainline.patch
  patch -p1 -i "$_tkg_path"/proton/proton-win10-default/proton-win10-default.patch
  #patch -p1 -i "$_tkg_path"/proton/valve_proton_fullscreen_hack/FS_bypass_compositor.patch

  patch -p1 -i "$srcdir"/wine-wmclass.patch
  patch -p1 -i "$srcdir"/wine-isolate_home.patch
  ./dlls/winevulkan/make_vulkan
  ./tools/make_specfiles
  ./tools/make_requests
  autoreconf -fiv
}

build() {
  # Doesn't compile without remove these flags as of 4.10
  # incompatible-pointer-types: https://bugs.gentoo.org/919758
  export CFLAGS="$CFLAGS -ffat-lto-objects -Wno-error=incompatible-pointer-types"

  # Apply flags for cross-compilation
  export CROSSCFLAGS="-O2 -pipe"
  export CROSSCXXFLAGS="-O2 -pipe"
  export CROSSLDFLAGS="-Wl,-O1"

  local -a split=($CFLAGS)
  local -A flags
  for opt in "${split[@]}"; do flags["${opt%%=*}"]="${opt##*=}"; done
  local march="${flags["-march"]:-nocona}"
  local mtune="${flags["-mtune"]:-core-avx2}"

  # From Proton
  OPTIMIZE_FLAGS="-O3 -march=$march -mtune=$mtune -mfpmath=sse -pipe -fno-semantic-interposition"
  SANITY_FLAGS="-fwrapv -fno-strict-aliasing"
  WARNING_FLAGS="-Wno-incompatible-pointer-types"
  COMMON_FLAGS="$OPTIMIZE_FLAGS $SANITY_FLAGS $WARNING_FLAGS -s"
  #LTO_CFLAGS="-fuse-linker-plugin -fdevirtualize-at-ltrans -flto-partition=one -flto -Wl,-flto"

  COMMON_LDFLAGS="-Wl,-O1,--sort-common,--as-needed"
  #LTO_LDFLAGS="$LTO_CFLAGS"

  # Disable assertions
  #export CPPFLAGS="-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -DNDEBUG -D_NDEBUG"

  export LDFLAGS="$COMMON_LDFLAGS $LTO_LDFLAGS"
  export CROSSLDFLAGS="$COMMON_LDFLAGS -Wl,--file-alignment,4096"

  cd "$srcdir"

  msg2 "Building Wine-64..."

  export CFLAGS="$COMMON_FLAGS -mcmodel=small $LTO_CFLAGS"
  export CXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17 $LTO_CFLAGS"
  export CROSSCFLAGS="$COMMON_FLAGS"
  export CROSSCXXFLAGS="$COMMON_FLAGS -std=c++17"
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-64-build"
  ../$pkgname/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-mingw \
    --with-alsa \
    --without-oss \
    --disable-winemenubuilder \
    --disable-tests \
    --enable-archs=x86_64,i386 \
    --with-xattr

  make

}

package() {

  msg2 "Packaging Wine-64..."
  cd "$srcdir/$pkgname-64-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install

  ln -sf /usr/bin/wine "$pkgdir"/usr/bin/wine64

  # Font aliasing settings for Win32 applications
  install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
  install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"

  i686-w64-mingw32-strip --strip-unneeded "$pkgdir"/usr/lib/wine/i386-windows/*.{dll,exe}
  x86_64-w64-mingw32-strip --strip-unneeded "$pkgdir"/usr/lib/wine/x86_64-windows/*.{dll,exe}

  #find "$pkgdir"/usr/lib/wine -iname "*.a" -delete
  #find "$pkgdir"/usr/lib/wine -iname "*.def" -delete
}

# vim:set ts=8 sts=2 sw=2 et:
