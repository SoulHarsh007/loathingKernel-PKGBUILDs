# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-staging
pkgver=9.16
pkgrel=2

_pkgbasever=${pkgver/rc/-rc}
_winever=$_pkgbasever
#_winever=${_pkgbasever%.*}

source=(https://dl.winehq.org/wine/source/9.x/wine-$_winever.tar.xz{,.sign}
        "https://github.com/wine-staging/wine-staging/archive/v$_pkgbasever/wine-staging-v$_pkgbasever.tar.gz"
        30-win32-aliases.conf
        wine-binfmt.conf)
sha512sums=('4d19b7c0fbdf6ee5dc90c0aef800df47f5bda7e3506e5a3c065dcd29b33cc62840ae4eeb5c20c48e9400c0d1252b897d8bbc60fd5a58da1ad6e76ba677997cb3'
            'SKIP'
            '37237e4f19319e34341fef1bb656d5c98309d148cdef7f105e7cd4eb10134364766df5287755ba23ebc2a3d28294bd10c7991c9a3acbe076ad33a386ae92b304'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285')
validpgpkeys=(5AC1A08B03BD7A313E0A955AF5E6E9EEB9461DD7
              DA23579A74D4AD9AF9D3F945CEFAC8EAAF17519D)

pkgdesc="A compatibility layer for running Windows programs - Staging branch"
url="https://www.wine-staging.com"
arch=(x86_64)
options=(!staticlibs !lto)
license=(LGPL-2.1-or-later)

depends=(
  attr             lib32-attr
  fontconfig       lib32-fontconfig
  libxcursor       lib32-libxcursor
  libxrandr        lib32-libxrandr
  libxi            lib32-libxi
  gettext          lib32-gettext
  freetype2        lib32-freetype2
  gcc-libs         lib32-gcc-libs
  libpcap          lib32-libpcap
  desktop-file-utils
)
depends+=(
  libxkbcommon     lib32-libxkbcommon
  wayland          lib32-wayland
)

makedepends=(autoconf bison perl flex mingw-w64-gcc
  git
  python
  giflib                lib32-giflib
  gnutls                lib32-gnutls
  libxinerama           lib32-libxinerama
  libxcomposite         lib32-libxcomposite
  libxxf86vm            lib32-libxxf86vm
  v4l-utils             lib32-v4l-utils
  alsa-lib              lib32-alsa-lib
  libxcomposite         lib32-libxcomposite
  mesa                  lib32-mesa
  mesa-libgl            lib32-mesa-libgl
  opencl-icd-loader     lib32-opencl-icd-loader
  libpulse              lib32-libpulse
  libva                 lib32-libva
  gtk3                  lib32-gtk3
  gst-plugins-base-libs lib32-gst-plugins-base-libs
  vulkan-icd-loader     lib32-vulkan-icd-loader
  sdl2                  lib32-sdl2
  libcups               lib32-libcups
  sane
  libgphoto2
  ffmpeg
  samba
  opencl-headers
)
makedepends+=(
  ntsync-header
)

optdepends=(
  giflib                lib32-giflib
  gnutls                lib32-gnutls
  v4l-utils             lib32-v4l-utils
  libpulse              lib32-libpulse
  alsa-plugins          lib32-alsa-plugins
  alsa-lib              lib32-alsa-lib
  libxcomposite         lib32-libxcomposite
  libxinerama           lib32-libxinerama
  opencl-icd-loader     lib32-opencl-icd-loader
  libva                 lib32-libva
  gtk3                  lib32-gtk3
  gst-plugins-base-libs lib32-gst-plugins-base-libs
  gst-plugins-good      lib32-gst-plugins-good
  vulkan-icd-loader     lib32-vulkan-icd-loader
  sdl2                  lib32-sdl2
  sane
  libgphoto2
  ffmpeg
  cups
  samba           dosbox
)
optdepends+=(
  ntsync-dkms
)

provides=("wine=$pkgver")
conflicts=('wine')
install=wine.install

prepare() {
  # Allow ccache to work
  mv wine-$_winever $pkgname

  # Get rid of old build dirs
  rm -rf $pkgname-{32,64}-build
  mkdir $pkgname-{32,64}-build

  # apply wine-staging patchset
  cd $pkgname
  patch -p1 -i "$srcdir"/wine-ntsync.patch
  ../wine-staging-$_pkgbasever/staging/patchinstall.py --all \
    -W eventfd_synchronization \
    -W ntdll-Syscall_Emulation \
    -W server-PeekMessage \
    -W server-Signal_Thread

  _tkg_path="$srcdir"/wine-tkg-git/wine-tkg-git/wine-tkg-patches
  #patch -p1 -i "$_tkg_path"/proton/fsync/fsync-unix-staging.patch
  #patch -p1 -i "$_tkg_path"/proton/fsync/fsync_futex_waitv.patch
  patch -p1 -i "$_tkg_path"/proton/LAA/LAA-unix-staging.patch
  patch -p1 -i "$_tkg_path"/proton/msvcrt_nativebuiltin/msvcrt_nativebuiltin_mainline.patch
  patch -p1 -i "$_tkg_path"/proton/proton-win10-default/proton-win10-default.patch
  #patch -p1 -i "$_tkg_path"/proton/valve_proton_fullscreen_hack/FS_bypass_compositor.patch

  patch -p1 -i "$srcdir"/wine-wmclass.patch
  patch -p1 -i "$srcdir"/wine-isolate_home.patch
  ./dlls/winevulkan/make_vulkan
  ./tools/make_specfiles
  ./tools/make_requests
  autoreconf -fiv
}

build() {
  # Doesn't compile without remove these flags as of 4.10
  export CFLAGS="$CFLAGS -ffat-lto-objects"

  local -a split=($CFLAGS)
  local -A flags
  for opt in "${split[@]}"; do flags["${opt%%=*}"]="${opt##*=}"; done
  local march="${flags["-march"]:-nocona}"
  local mtune="generic" #"${flags["-mtune"]:-core-avx2}"

  # From Proton
  OPTIMIZE_FLAGS="-O3 -march=$march -mtune=$mtune -mno-avx2 -mfpmath=sse -pipe -fno-semantic-interposition"
  SANITY_FLAGS="-fwrapv -fno-strict-aliasing"
  WARNING_FLAGS="-Wno-incompatible-pointer-types"
  COMMON_FLAGS="$OPTIMIZE_FLAGS $SANITY_FLAGS $WARNING_FLAGS -s"

  export LDFLAGS="-Wl,-O1,--sort-common,--as-needed"
  export CROSSLDFLAGS="$LDFLAGS -Wl,--file-alignment,4096"

  cd "$srcdir"

  msg2 "Building Wine-64..."

  export CFLAGS="$COMMON_FLAGS -mcmodel=small"
  export CXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17"
  export CROSSCFLAGS="$CFLAGS"
  export CROSSCXXFLAGS="$CXXFLAGS"
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-64-build"
  ../$pkgname/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-mingw \
    --with-alsa \
    --without-oss \
    --disable-winemenubuilder \
    --disable-tests \
    --enable-win64 \
    --with-xattr

  make

  msg2 "Building Wine-32..."

  # Disable AVX instead of using 02, for 32bit
  export CFLAGS="$COMMON_FLAGS -mstackrealign -mno-avx"
  export CXXFLAGS="$COMMON_FLAGS -mstackrealign -mno-avx -std=c++17"
  export CROSSCFLAGS="$CFLAGS"
  export CROSSCXXFLAGS="$CXXFLAGS"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-32-build"
  ../$pkgname/configure \
    --prefix=/usr \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-mingw \
    --with-alsa \
    --without-oss \
    --disable-winemenubuilder \
    --disable-tests \
    --with-xattr \
    --libdir=/usr/lib32 \
    --with-wine64="$srcdir/$pkgname-64-build"

  make
}

package() {
  msg2 "Packaging Wine-32..."
  cd "$srcdir/$pkgname-32-build"

  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib32" \
    dlldir="$pkgdir/usr/lib32/wine" install

  msg2 "Packaging Wine-64..."
  cd "$srcdir/$pkgname-64-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install

  # Font aliasing settings for Win32 applications
  install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
  install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"

  i686-w64-mingw32-strip --strip-unneeded "$pkgdir"/usr/lib32/wine/i386-windows/*.{dll,exe}
  x86_64-w64-mingw32-strip --strip-unneeded "$pkgdir"/usr/lib/wine/x86_64-windows/*.{dll,exe}

  find "$pkgdir"/usr/lib{,32}/wine -iname "*.a" -delete
  find "$pkgdir"/usr/lib{,32}/wine -iname "*.def" -delete
}

# vim:set ts=8 sts=2 sw=2 et:
_tkg_commit=e5e156ccec589b047723b60dfebcc349a4dd67c7
source+=(
        git+https://github.com/Frogging-Family/wine-tkg-git.git#commit=${_tkg_commit}
        wine-wmclass.patch
        wine-isolate_home.patch
        wine-ntsync.patch
)
sha512sums=('5f2994d20b8c7635125b38b6a4d89db4b71791f096276fa93e36dc6951c47c25b8a3354f0be0931799ac83c54f048e34693b56512cc446b93c74344b1a458187'
            'SKIP'
            '513af6d56f491e49c29ffced546b9025d0dbd4cf0c0186cd118132380bf58f45277d129c49fd3f5bc1ccc5d391e456fd2f0792b60b92d1dc448ba8b1f98efa34'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285'
            '957b38aa14b06994d819e36e4d5bc6235a59814637bb020c0b6d984bac65914647c86819e41893212a5724b32353c44fab54ff0c4cce6ad87d115d3a52aa2be1'
            '30437d8ee92c5741fa50a7fe346ccfc48ba809dad0d740903a05a67781d23ea38a5094038a070a253e3fdd8046783b46a5420df6361bdd30cb229d3d88107569'
            '3dcdbd523fcbe79b9e9e9b026b9d0a5edf296514c7b48bd465d2dc05a8ca08e23ba8817e2de08edfe52286a2a2f81db42b65f71254cabe496752b9d45131d282'
            '685257c1a70ff5d465256e9f915ed7823ad179844938d4c2c7a4dfcb76a144b3e59ede471c8c86b19ac4afe93e70eba98ff4ab216fd886d81ba7ec917ce93b23')
